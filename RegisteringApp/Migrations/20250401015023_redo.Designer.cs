// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RegisteringApp.Data;

#nullable disable

namespace RegisteringApp.Migrations
{
    [DbContext(typeof(RegistryContext))]
    [Migration("20250401015023_redo")]
    partial class redo
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RegisteringApp.Models.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PublicID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Clients");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "YourEmail@gmail.com",
                            FirstName = "FirstName",
                            LastName = "LastName",
                            PublicID = 2
                        });
                });

            modelBuilder.Entity("RegisteringApp.Models.ID", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ClientId")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClientId")
                        .IsUnique()
                        .HasFilter("[ClientId] IS NOT NULL");

                    b.ToTable("_ID");

                    b.HasData(
                        new
                        {
                            Id = 2,
                            ClientId = 1,
                            LastName = "Client_LastName"
                        });
                });

            modelBuilder.Entity("RegisteringApp.Models.ID", b =>
                {
                    b.HasOne("RegisteringApp.Models.Client", "client")
                        .WithOne("_ID")
                        .HasForeignKey("RegisteringApp.Models.ID", "ClientId");

                    b.Navigation("client");
                });

            modelBuilder.Entity("RegisteringApp.Models.Client", b =>
                {
                    b.Navigation("_ID");
                });
#pragma warning restore 612, 618
        }
    }
}
